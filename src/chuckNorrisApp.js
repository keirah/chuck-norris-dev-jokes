// Generated by BUCKLESCRIPT VERSION 1.8.0, PLEASE EDIT WITH CARE
'use strict';

var Block       = require("bs-platform/lib/js/block.js");
var Curry       = require("bs-platform/lib/js/curry.js");
var React       = require("react");
var ChuckData   = require("./chuckData.js");
var ChuckJoke   = require("./chuckJoke.js");
var ReasonReact = require("reason-react/lib/js/src/reasonReact.js");

var component = ReasonReact.statefulComponent("ChuckNorrisApp");

function handleLoadingData(joke, _, _$1) {
  return /* Update */Block.__(0, [/* record */[/* joke : Some */[joke]]]);
}

function handleClick(_, _$1, self) {
  ChuckData.fetchJoke(/* () */0).then((function (joke) {
          Curry._2(self[/* update */2], handleLoadingData, joke);
          return Promise.resolve(/* () */0);
        }));
  return /* NoUpdate */0;
}

function make() {
  var newrecord = component.slice();
  newrecord[/* didMount */4] = (function (_, self) {
      ChuckData.fetchJoke(/* () */0).then((function (joke) {
              Curry._2(self[/* update */2], handleLoadingData, joke);
              return Promise.resolve(/* () */0);
            }));
      return /* NoUpdate */0;
    });
  newrecord[/* render */9] = (function (state, self) {
      var match = state[/* joke */0];
      var chuckJoke = match ? ReasonReact.element(/* None */0, /* None */0, ChuckJoke.make(match[0], /* array */[])) : React.createElement("div", undefined, "Loading");
      return React.createElement("div", {
                  className: "App"
                }, React.createElement("div", {
                      className: "App-header"
                    }, React.createElement("h1", undefined, "Chuck Norris Dev Jokes")), React.createElement("button", {
                      className: "mainButton",
                      onClick: Curry._1(self[/* update */2], handleClick)
                    }, "Tell us a joke, Chuck"), chuckJoke);
    });
  newrecord[/* initialState */10] = (function () {
      return /* record */[/* joke : None */0];
    });
  return newrecord;
}

exports.component         = component;
exports.handleLoadingData = handleLoadingData;
exports.handleClick       = handleClick;
exports.make              = make;
/* component Not a pure module */
